
name: CI

on: [push]

jobs:
  buildfront:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Make front build directory
      run: |
        mkdir -p fbuild/agd
        mkdir -p fbuild/gl
    - name: Restore cache
      uses: actions/cache@v1
      with:
        path: ./front/.npm
        key: npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: npm-
    - name: Install dependency
      run: |
        cd front
        npm install
    - name: Build front for AGD version
      run: |
        cd front
        cp .env.agd .env.production
        npm run build
        mv dist ../fbuild/agd/
    - name: Build front for GL version
      run: |
        cd front
        cp .env.gl .env.production
        npm run build
        mv dist ../fbuild/gl/
    - name: Persist front builds
      uses: actions/upload-artifact@v1
      with:
        name: fbuild
        path: ./fbuild

  buildserver:
    runs-on: ubuntu-latest
    container: aizugeekdojo/cgo-arm:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Make server build directory
      run: mkdir sbuild
    - name: Restore cache
      uses: actions/cache@v1
      with:
        path: /go/pkg/mod
        key: gomod-${{ hashFiles('go.sum') }}
        restore-keys: gomod-
    - name: Build server
      run: GO111MODULE=on go build -o sbuild/elsystem server/main.go
    - name: Persist front builds
      uses: actions/upload-artifact@v1
      with:
        name: sbuild
        path: ./sbuild

  release:
    needs:
    - buildfront
    - buildserver
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Restore front build
      uses: actions/download-artifact@v1
      with:
        name: fbuild
    - name: Restore server build
      uses: actions/download-artifact@v1
      with:
        name: sbuild
    - name: Make build directory
      run: |
        mkdir -p build/agd/EnterLeaveSystem
        mkdir -p build/gl/EnterLeaveSystem
    - name: Copy front build files
      run: |
        cp -r fbuild/agd/dist build/agd/EnterLeaveSystem/ 
        cp -r fbuild/gl/dist build/gl/EnterLeaveSystem/
    - name: Copy server build file
      run: |
        cp sbuild/elsystem build/agd/EnterLeaveSystem/
        cp sbuild/elsystem build/gl/EnterLeaveSystem/
    - name: Copy other install files
      run: |
        cp bin/* build/agd/EnterLeaveSystem/
        cp bin/* build/gl/EnterLeaveSystem/
    - name: Archive binary for AGD
      run: cd build/agd && tar cvfz ../../agd.tar.gz EnterLeaveSystem/
    - name: Archive binary for AGD
      run: cd build/gl && tar cvfz ../../gl.tar.gz EnterLeaveSystem/
    - name: Calculate version for tag
      run: ./calctag.sh
    # - name: Get tag name from file
    #   uses: GenesisSam/get-simple-file-action@v1.0.4
    #   id: tagname
    #   with:
    #     file-name: tagver
    # - name: Create Release
    #   uses: meeDamian/github-release@1.0
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     tag: ${{ steps.tagname.outputs.data }}
    #     name: Release ${{ steps.tagname.outputs.data }}
    #     body: Release ${{ steps.tagname.outputs.data }}
    #     prerelease: ${{ !endsWith( github.ref, '/master' ) }}
    #     gzip: false
    #     files: >
    #       ./build/agd.tar.gz
    #       ./build/gl.tar.gz
    #     allow_override: true
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: ${{ steps.tagname.outputs.data }}
    #     release_name: Release ${{ steps.tagname.outputs.data }}
    #     body: Release ${{ steps.tagname.outputs.data }}
    #     draft: false
    #     prerelease: ${{ !endsWith( github.ref, '/master' ) }}
    # - name: Upload AGD Release
    #   id: upload-release-agd 
    #   uses: actions/upload-release-asset@v1.0.1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: ./build/agd.tar.gz
    #     asset_name: agd.tar.gz
    #     asset_content_type: application/gzip
    # - name: Upload GL Release
    #   id: upload-release-gl 
    #   uses: actions/upload-release-asset@v1.0.1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: ./build/gl.tar.gz
    #     asset_name: gl.tar.gz
    #     asset_content_type: application/gzip